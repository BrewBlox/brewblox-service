sudo: required
language: python
dist: xenial
python: '3.7'

services:
  - docker

install:
  - source .env
  - pip install pipenv
  - pipenv sync --dev

script:
  - pytest

# Note: Deployment refers to multiple environment variables, both public and private.
# Public values should be set in the .env file in the repository.
#
# Public variables are:
# * GITHUB_REPO
# * DOCKER_REPO
#
# Private values such as passwords should not be added to the source code.
# They can be set using the Travis web client.
#
# To set these, edit your repository settings in https://travis-ci.org/,
# and add them as environment variables.
# By default, any occurrence of the variable is censored in the build log.
#
# Private variables are:
# * DOCKER_USER
# * DOCKER_PASSWORD
# * PYPI_USER
# * PYPI_PASSWORD


before_deploy:
  python setup.py sdist;
  bbt-distcopy dist/ docker/dist/;
  bbt-distcopy config/ docker/config/;
  pipenv lock --requirements > docker/requirements.txt;
  docker login -u ${DOCKER_USER} -p ${DOCKER_PASSWORD};
  docker run --rm --privileged multiarch/qemu-user-static:register --reset;

deploy:
  # Deploy "newest-tag" and version tag to Docker Hub on tagged commits
  - provider: script
    script:
      bbt-deploy-docker
      --no-cache
      --context docker
      --file amd/Dockerfile
      --name ${DOCKER_REPO}
      --tags newest-tag $(git describe --tags)
      &&
      bbt-deploy-docker
      --no-cache
      --context docker
      --file arm/Dockerfile
      --name ${DOCKER_REPO}
      --tags rpi-newest-tag rpi-$(git describe --tags)
    skip_cleanup: true
    on:
      tags: true

  # Deploy branch to Docker Hub on any push to the GitHub repository (but not forks)
  - provider: script
    script:
      bbt-deploy-docker
      --no-cache
      --context docker
      --file amd/Dockerfile
      --name ${DOCKER_REPO}
      --tags ${TRAVIS_BRANCH}
      &&
      bbt-deploy-docker
      --no-cache
      --context docker
      --file arm/Dockerfile
      --name ${DOCKER_REPO}
      --tags rpi-${TRAVIS_BRANCH}
    skip_cleanup: true
    on:
      tags: false
      repo: ${GITHUB_REPO}
      all_branches: true

  # Deploy to PyPi any time the package version number is updated
  - provider: pypi
    user: ${PYPI_USER}
    password: ${PYPI_PASSWORD}
    skip_existing: true
    skip_cleanup: true
    on:
      repo: ${GITHUB_REPO}
      all_branches: true
