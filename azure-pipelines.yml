pool:
  vmImage: 'Ubuntu-18.04'

trigger:
  tags:
    include:
      - "*"
  branches:
    include:
      - refs/heads/*

pr:
  branches:
    include:
      - '*'

variables:
  # Variables imported from brewblox group:
  # DOCKER_USER
  # DOCKER_PASSWORD
  # PYPI_USER
  # PYPI_PASSWORD
  - group: brewblox
  - name: DOCKER_BUILDKIT
    value: 1

steps:
- task: UsePythonVersion@0
  inputs:
    addToPath: true
    versionSpec: '3.8'
    architecture: 'x64'

- bash: |
    set -o allexport; source .env; set +o allexport
    BRANCH=$(echo $(Build.SourceBranch) | grep -oP "^refs/heads/\K.*")
    RELEASE=$(git describe --tags | grep "^[[:digit:]]*\.[[:digit:]]*\.[[:digit:]]$")
    TAG=$(echo $BRANCH | tr '/' '-' | tr '[:upper:]' '[:lower:]')
    echo "##vso[task.setvariable variable=DOCKER_REPO]$DOCKER_REPO"
    echo "##vso[task.setvariable variable=GITHUB_REPO]$GITHUB_REPO"
    echo "##vso[task.setvariable variable=BRANCH]$BRANCH"
    echo "##vso[task.setvariable variable=RELEASE]$RELEASE"
    echo "##vso[task.setvariable variable=TAG]$TAG"
  displayName: export build variables

- bash: |
    pip install pipenv
    pipenv install --system --dev --deploy
    python setup.py sdist
  displayName: Build Python package

- bash: |
    pytest
  displayName: Run pytest

- bash: |
    curl -L -o ~/.docker/cli-plugins/docker-buildx --create-dirs ${BUILDX_URL}
    chmod a+x ~/.docker/cli-plugins/docker-buildx
  displayName: Install buildx
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
  env:
    BUILDX_URL: https://github.com/docker/buildx/releases/download/v0.3.1/buildx-v0.3.1.linux-amd64

- bash: |
    echo $(DOCKER_PASSWORD) | docker login -u $(DOCKER_USER) --password-stdin
  displayName: Docker login
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))

- bash: |
    pipenv lock --requirements > docker/requirements.txt
    cp -r dist/ docker/
  displayName: Copy files to docker context

- bash: |
    docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    docker buildx create --use
    docker buildx inspect --bootstrap
    docker buildx build --tag $(DOCKER_REPO):$(TAG) --push --platform linux/amd64,linux/arm/v7 docker
  displayName: Deploy branch to Docker Hub on any push to the GitHub repository
  condition: and(succeeded(), variables['BRANCH'], not(variables['RELEASE']))
# - bash: >
#     brewblox-dev localbuild
#     --arch amd --arch arm
#     --tag newest-tag --tag $(RELEASE)
#     --push
#   displayName: Deploy newest-tag and version tag to Docker Hub on tagged commits
#   condition: and(succeeded(), variables['RELEASE'])

# - bash: >
#     brewblox-dev localbuild
#     --arch amd --arch arm
#     --branch-tag
#     --push
#   displayName: Deploy branch to Docker Hub on any push to the GitHub repository
#   condition: and(succeeded(), variables['BRANCH'], not(variables['RELEASE']))
#   env:
#   # brewblox-tools looks for $TRAVIS_BRANCH to determine branch tag
#     TRAVIS_BRANCH: $(BRANCH)

- bash: |
    pip install twine
    twine upload -u $(PYPI_USER) -p $(PYPI_PASSWORD) --skip-existing dist/*
  displayName: Deploy to PyPi
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
